// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Switch withStyles should render correctly 1`] = `
Array [
  <WithStyles(HvSwitch)
    aria-label="Engine 1"
  >
    <HvSwitch
      aria-label="Engine 1"
      classes={
        Object {
          "error": "HvSwitch-error",
          "label": "HvSwitch-label",
          "root": "HvSwitch-root",
        }
      }
    >
      <WithStyles(HvFormElement)
        className="HvSwitch-root"
        disabled={false}
        readOnly={false}
        required={false}
        status="standBy"
        value="on"
      >
        <HvFormElement
          className="HvSwitch-root"
          classes={
            Object {
              "root": "HvFormElement-root",
            }
          }
          disabled={false}
          readOnly={false}
          required={false}
          status="standBy"
          value="on"
        >
          <div
            className="HvSwitch-root HvFormElement-root"
            id="hv-form-element6"
          >
            <WithStyles(HvBaseSwitch)
              checked={false}
              disabled={false}
              id={null}
              inputProps={
                Object {
                  "aria-describedby": undefined,
                  "aria-errormessage": undefined,
                  "aria-invalid": undefined,
                  "aria-label": "Engine 1",
                  "aria-labelledby": undefined,
                }
              }
              onChange={[Function]}
              readOnly={false}
              required={false}
              value="on"
            >
              <HvBaseSwitch
                checked={false}
                classes={
                  Object {
                    "checked": "HvBaseSwitch-checked",
                    "disabled": "HvBaseSwitch-disabled",
                    "focusVisible": "HvBaseSwitch-focusVisible",
                    "root": "HvBaseSwitch-root",
                    "switch": "HvBaseSwitch-switch",
                    "switchBase": "HvBaseSwitch-switchBase",
                    "thumb": "HvBaseSwitch-thumb",
                    "track": "HvBaseSwitch-track",
                  }
                }
                disabled={false}
                id={null}
                inputProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-errormessage": undefined,
                    "aria-invalid": undefined,
                    "aria-label": "Engine 1",
                    "aria-labelledby": undefined,
                  }
                }
                onChange={[Function]}
                readOnly={false}
                required={false}
                value="on"
              >
                <WithStyles(ForwardRef(Switch))
                  checked={false}
                  className="HvBaseSwitch-root"
                  classes={
                    Object {
                      "checked": "HvBaseSwitch-checked",
                      "disabled": "HvBaseSwitch-disabled",
                      "root": "HvBaseSwitch-switch",
                      "switchBase": "HvBaseSwitch-switchBase",
                      "thumb": "HvBaseSwitch-thumb",
                      "track": "HvBaseSwitch-track",
                    }
                  }
                  color="default"
                  disableRipple={true}
                  disabled={false}
                  id={null}
                  inputProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-errormessage": undefined,
                      "aria-invalid": undefined,
                      "aria-label": "Engine 1",
                      "aria-labelledby": undefined,
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocusVisible={[Function]}
                  readOnly={false}
                  required={false}
                  value="on"
                >
                  <ForwardRef(Switch)
                    checked={false}
                    className="HvBaseSwitch-root"
                    classes={
                      Object {
                        "checked": "Mui-checked HvBaseSwitch-checked",
                        "colorPrimary": "MuiSwitch-colorPrimary",
                        "colorSecondary": "MuiSwitch-colorSecondary",
                        "disabled": "Mui-disabled HvBaseSwitch-disabled",
                        "edgeEnd": "MuiSwitch-edgeEnd",
                        "edgeStart": "MuiSwitch-edgeStart",
                        "input": "MuiSwitch-input",
                        "root": "MuiSwitch-root HvBaseSwitch-switch",
                        "sizeSmall": "MuiSwitch-sizeSmall",
                        "switchBase": "MuiSwitch-switchBase HvBaseSwitch-switchBase",
                        "thumb": "MuiSwitch-thumb HvBaseSwitch-thumb",
                        "track": "MuiSwitch-track HvBaseSwitch-track",
                      }
                    }
                    color="default"
                    disableRipple={true}
                    disabled={false}
                    id={null}
                    inputProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": "Engine 1",
                        "aria-labelledby": undefined,
                      }
                    }
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocusVisible={[Function]}
                    readOnly={false}
                    required={false}
                    value="on"
                  >
                    <span
                      className="MuiSwitch-root HvBaseSwitch-switch HvBaseSwitch-root"
                    >
                      <WithStyles(ForwardRef(SwitchBase))
                        checked={false}
                        checkedIcon={
                          <span
                            className="MuiSwitch-thumb HvBaseSwitch-thumb"
                          />
                        }
                        classes={
                          Object {
                            "checked": "Mui-checked HvBaseSwitch-checked",
                            "disabled": "Mui-disabled HvBaseSwitch-disabled",
                            "input": "MuiSwitch-input",
                            "root": "MuiSwitch-switchBase HvBaseSwitch-switchBase",
                          }
                        }
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <span
                            className="MuiSwitch-thumb HvBaseSwitch-thumb"
                          />
                        }
                        id={null}
                        inputProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": "Engine 1",
                            "aria-labelledby": undefined,
                          }
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocusVisible={[Function]}
                        readOnly={false}
                        required={false}
                        type="checkbox"
                        value="on"
                      >
                        <ForwardRef(SwitchBase)
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvBaseSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked",
                              "disabled": "PrivateSwitchBase-disabled-7 Mui-disabled HvBaseSwitch-disabled",
                              "input": "PrivateSwitchBase-input-8 MuiSwitch-input",
                              "root": "PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase",
                            }
                          }
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvBaseSwitch-thumb"
                            />
                          }
                          id={null}
                          inputProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": "Engine 1",
                              "aria-labelledby": undefined,
                            }
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocusVisible={[Function]}
                          readOnly={false}
                          required={false}
                          type="checkbox"
                          value="on"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            className="PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase"
                            component="span"
                            disableRipple={true}
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onFocusVisible={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(IconButton)
                              className="PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              component="span"
                              disableRipple={true}
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onFocusVisible={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                centerRipple={true}
                                className="MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onFocusVisible={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onFocusVisible={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase"
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <input
                                        aria-label="Engine 1"
                                        checked={false}
                                        className="PrivateSwitchBase-input-8 MuiSwitch-input"
                                        disabled={false}
                                        id={null}
                                        onChange={[Function]}
                                        readOnly={false}
                                        required={false}
                                        type="checkbox"
                                        value="on"
                                      />
                                      <span
                                        className="MuiSwitch-thumb HvBaseSwitch-thumb"
                                      />
                                    </span>
                                  </span>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </ForwardRef(SwitchBase)>
                      </WithStyles(ForwardRef(SwitchBase))>
                      <span
                        className="MuiSwitch-track HvBaseSwitch-track"
                      />
                    </span>
                  </ForwardRef(Switch)>
                </WithStyles(ForwardRef(Switch))>
              </HvBaseSwitch>
            </WithStyles(HvBaseSwitch)>
          </div>
        </HvFormElement>
      </WithStyles(HvFormElement)>
    </HvSwitch>
  </WithStyles(HvSwitch)>,
  <WithStyles(HvSwitch)
    aria-label="Engine 2"
    defaultChecked={true}
  >
    <HvSwitch
      aria-label="Engine 2"
      classes={
        Object {
          "error": "HvSwitch-error",
          "label": "HvSwitch-label",
          "root": "HvSwitch-root",
        }
      }
      defaultChecked={true}
    >
      <WithStyles(HvFormElement)
        className="HvSwitch-root"
        disabled={false}
        readOnly={false}
        required={false}
        status="standBy"
        value="on"
      >
        <HvFormElement
          className="HvSwitch-root"
          classes={
            Object {
              "root": "HvFormElement-root",
            }
          }
          disabled={false}
          readOnly={false}
          required={false}
          status="standBy"
          value="on"
        >
          <div
            className="HvSwitch-root HvFormElement-root"
            id="hv-form-element8"
          >
            <WithStyles(HvBaseSwitch)
              checked={true}
              disabled={false}
              id={null}
              inputProps={
                Object {
                  "aria-describedby": undefined,
                  "aria-errormessage": undefined,
                  "aria-invalid": undefined,
                  "aria-label": "Engine 2",
                  "aria-labelledby": undefined,
                }
              }
              onChange={[Function]}
              readOnly={false}
              required={false}
              value="on"
            >
              <HvBaseSwitch
                checked={true}
                classes={
                  Object {
                    "checked": "HvBaseSwitch-checked",
                    "disabled": "HvBaseSwitch-disabled",
                    "focusVisible": "HvBaseSwitch-focusVisible",
                    "root": "HvBaseSwitch-root",
                    "switch": "HvBaseSwitch-switch",
                    "switchBase": "HvBaseSwitch-switchBase",
                    "thumb": "HvBaseSwitch-thumb",
                    "track": "HvBaseSwitch-track",
                  }
                }
                disabled={false}
                id={null}
                inputProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-errormessage": undefined,
                    "aria-invalid": undefined,
                    "aria-label": "Engine 2",
                    "aria-labelledby": undefined,
                  }
                }
                onChange={[Function]}
                readOnly={false}
                required={false}
                value="on"
              >
                <WithStyles(ForwardRef(Switch))
                  checked={true}
                  className="HvBaseSwitch-root"
                  classes={
                    Object {
                      "checked": "HvBaseSwitch-checked",
                      "disabled": "HvBaseSwitch-disabled",
                      "root": "HvBaseSwitch-switch",
                      "switchBase": "HvBaseSwitch-switchBase",
                      "thumb": "HvBaseSwitch-thumb",
                      "track": "HvBaseSwitch-track",
                    }
                  }
                  color="default"
                  disableRipple={true}
                  disabled={false}
                  id={null}
                  inputProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-errormessage": undefined,
                      "aria-invalid": undefined,
                      "aria-label": "Engine 2",
                      "aria-labelledby": undefined,
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocusVisible={[Function]}
                  readOnly={false}
                  required={false}
                  value="on"
                >
                  <ForwardRef(Switch)
                    checked={true}
                    className="HvBaseSwitch-root"
                    classes={
                      Object {
                        "checked": "Mui-checked HvBaseSwitch-checked",
                        "colorPrimary": "MuiSwitch-colorPrimary",
                        "colorSecondary": "MuiSwitch-colorSecondary",
                        "disabled": "Mui-disabled HvBaseSwitch-disabled",
                        "edgeEnd": "MuiSwitch-edgeEnd",
                        "edgeStart": "MuiSwitch-edgeStart",
                        "input": "MuiSwitch-input",
                        "root": "MuiSwitch-root HvBaseSwitch-switch",
                        "sizeSmall": "MuiSwitch-sizeSmall",
                        "switchBase": "MuiSwitch-switchBase HvBaseSwitch-switchBase",
                        "thumb": "MuiSwitch-thumb HvBaseSwitch-thumb",
                        "track": "MuiSwitch-track HvBaseSwitch-track",
                      }
                    }
                    color="default"
                    disableRipple={true}
                    disabled={false}
                    id={null}
                    inputProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": "Engine 2",
                        "aria-labelledby": undefined,
                      }
                    }
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocusVisible={[Function]}
                    readOnly={false}
                    required={false}
                    value="on"
                  >
                    <span
                      className="MuiSwitch-root HvBaseSwitch-switch HvBaseSwitch-root"
                    >
                      <WithStyles(ForwardRef(SwitchBase))
                        checked={true}
                        checkedIcon={
                          <span
                            className="MuiSwitch-thumb HvBaseSwitch-thumb"
                          />
                        }
                        classes={
                          Object {
                            "checked": "Mui-checked HvBaseSwitch-checked",
                            "disabled": "Mui-disabled HvBaseSwitch-disabled",
                            "input": "MuiSwitch-input",
                            "root": "MuiSwitch-switchBase HvBaseSwitch-switchBase",
                          }
                        }
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <span
                            className="MuiSwitch-thumb HvBaseSwitch-thumb"
                          />
                        }
                        id={null}
                        inputProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": "Engine 2",
                            "aria-labelledby": undefined,
                          }
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocusVisible={[Function]}
                        readOnly={false}
                        required={false}
                        type="checkbox"
                        value="on"
                      >
                        <ForwardRef(SwitchBase)
                          checked={true}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb HvBaseSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked",
                              "disabled": "PrivateSwitchBase-disabled-7 Mui-disabled HvBaseSwitch-disabled",
                              "input": "PrivateSwitchBase-input-8 MuiSwitch-input",
                              "root": "PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase",
                            }
                          }
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <span
                              className="MuiSwitch-thumb HvBaseSwitch-thumb"
                            />
                          }
                          id={null}
                          inputProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": "Engine 2",
                              "aria-labelledby": undefined,
                            }
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocusVisible={[Function]}
                          readOnly={false}
                          required={false}
                          type="checkbox"
                          value="on"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            className="PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked"
                            component="span"
                            disableRipple={true}
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onFocusVisible={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(IconButton)
                              className="PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              component="span"
                              disableRipple={true}
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onFocusVisible={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                centerRipple={true}
                                className="MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onFocusVisible={[Function]}
                                tabIndex={null}
                              >
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onFocusVisible={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-5 MuiSwitch-switchBase HvBaseSwitch-switchBase PrivateSwitchBase-checked-6 Mui-checked HvBaseSwitch-checked"
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <input
                                        aria-label="Engine 2"
                                        checked={true}
                                        className="PrivateSwitchBase-input-8 MuiSwitch-input"
                                        disabled={false}
                                        id={null}
                                        onChange={[Function]}
                                        readOnly={false}
                                        required={false}
                                        type="checkbox"
                                        value="on"
                                      />
                                      <span
                                        className="MuiSwitch-thumb HvBaseSwitch-thumb"
                                      />
                                    </span>
                                  </span>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </ForwardRef(SwitchBase)>
                      </WithStyles(ForwardRef(SwitchBase))>
                      <span
                        className="MuiSwitch-track HvBaseSwitch-track"
                      />
                    </span>
                  </ForwardRef(Switch)>
                </WithStyles(ForwardRef(Switch))>
              </HvBaseSwitch>
            </WithStyles(HvBaseSwitch)>
          </div>
        </HvFormElement>
      </WithStyles(HvFormElement)>
    </HvSwitch>
  </WithStyles(HvSwitch)>,
]
`;
